# AUTOGENERATED! DO NOT EDIT! File to edit: 02_keras.datasets.ipynb (unless otherwise specified).

__all__ = ['get_data', 'model_totpu']

# Cell
def get_data(size,batch_size,datagen):
    '''
    Function to Get Train and Validation Generator based in the Size and batch size passed
    sz - Size of the image to be passed in target size
    batch_size - batch size
    datagen - ImageDataGenerator Instance which contains augmentation details
    '''
    train_generator = datagen.flow_from_directory(train_path,target_size=(sz, sz),
      batch_size=bs,class_mode='categorical',shuffle=True)
    # read the Validation data from the file
    val_df=pd.read_csv(val_labels,sep='\t',header=None,usecols=[0,1], names=['filename', 'class'])

    validation_generator=datagen.flow_from_dataframe(dataframe=val_df, directory=val_path,
                                               x_col="filename", y_col="class", class_mode="categorical",
                                               target_size=(sz,sz), batch_size=bs,shuffle=True)
    return train_generator,validation_generator



# Colab Environment Only
def model_totpu(model,optim,loss,metrics):
    tpu_model = tf.contrib.tpu.keras_to_tpu_model(model,
                    strategy=tf.contrib.tpu.TPUDistributionStrategy(tf.contrib.cluster_resolver.TPUClusterResolver(tpu='grpc://' + os.environ['COLAB_TPU_ADDR'])
                ))
    tpu_model.compile(optimizer=optim,loss=loss,  metrics=metrics)
    return tpu_model