# AUTOGENERATED! DO NOT EDIT! File to edit: 01_datasetops.ipynb (unless otherwise specified).

__all__ = ['Resize_Image', 'Resize_Imgs_Directory', 'stratified_sample_df']

# Cell
import os
import sys
import PIL
from PIL import Image
from glob import glob
from multiprocessing import pool
from multiprocessing.dummy import Pool as ThreadPool
import pandas as pd

# path=''.join(sys.argv[1:])

# TODO : Need to Write Better Logic for Folder Creation and CLI parsing to pass no of Threads

# TODO : Suffix or Prefix Change ?

def Resize_Image( filepath ):
    im = Image.open( filepath )
    im = im.resize((256,256) ,PIL.Image.BILINEAR)
    im.save('Resized_'+filepath)

def Resize_Imgs_Directory(path,ext=''):
    os.makedirs("Resized_"+path)
    files=glob(path+'/*'+ext)
    pool = ThreadPool(8)
    pool.map( Resize_Image, files)


# Cell
def stratified_sample_df(df, col, n_samples,mode='min'):
    '''
    Add Verbose method to print out log
    '''
    if mode=='min':
        n = min(n_samples, df[col].value_counts().min())
        df_ = df.groupby(col).apply(lambda x: x.sample(n))
        df_.index = df_.index.droplevel(0)
        return df_
    elif mode=='max':
        max_size = max(n_samples,df[col].value_counts().max())
        lst = [df]
        for class_index, group in df.groupby(col):
            lst.append(group.sample(max_size-len(group), replace=True))
        return pd.concat(lst)
    else:
        max_size = n_samples
        lst = [df]
        for class_index, group in df.groupby(col):
            lst.append(group.sample(max_size-len(group), replace=True))
        return pd.concat(lst)

